openapi: 3.0.0
info:
  title: Car Price Guessr API
  description: Backend API for Car Price Guessr application
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Local development server
paths:
  /:
    get:
      summary: Root endpoint
      description: Returns a hello message
      responses:
        '200':
          description: Successful response
          content:
            text/plain:
              schema:
                type: string
                example: "hello"
  /api/users:
    get:
      summary: Get all users
      description: Returns a list of all users
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      description: Creates a new user with the provided name
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  example: "john_doe"
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /api/users/{id}:
    delete:
      summary: Delete a user
      description: Deletes a user with the specified ID
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the user to delete
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: User deleted successfully
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User not found"
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "lpc-10"
      required:
        - id
        - name